{{- $dbSec := default (dict "secretName" "" "value" "") .Values.bugsink.secrets.DATABASE_URL -}}
{{- if and (not $dbSec.secretName) (not $dbSec.value) -}}
{{- $secretName := printf "%s-db" .Release.Name -}}
{{- $existing := (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{- $username := .Values.bugsink.mariadb.username -}}
{{- $usernameB64 := b64enc $username -}}
{{- $dbName := .Values.bugsink.mariadb.database -}}
{{- $dbNameB64 := b64enc $dbName -}}
{{- /* Reuse existing password if secret exists, else generate or use provided */ -}}
{{- $passwordB64 := "" -}}
{{- if and $existing (hasKey $existing "data") (hasKey $existing.data "db-password") -}}
  {{- $passwordB64 = (index $existing.data "db-password") -}}
{{- else -}}
  {{- $passwordB64 = (b64enc (default (randAlphaNum 16) .Values.bugsink.mariadb.password)) -}}
{{- end -}}
{{- $password := b64dec $passwordB64 -}}
{{- $dsn := printf "mysql://%s:%s@%s-mariadb:3306/%s" $username $password .Release.Name $dbName -}}
{{- $dsnB64 := b64enc $dsn -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
type: Opaque
data:
  db-username: {{ $usernameB64 }}
  db-password: {{ $passwordB64 }}
  db-name: {{ $dbNameB64 }}
  database-url: {{ $dsnB64 }}
{{- end }}
